name: Release

on:
  push:
    branches:
      - main
    paths:
      - 'packages/**'

jobs:
  release:
    name: 'Release Packages'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [ai-chat-sdk, ai-chat-bot]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 'latest'

      - name: Install dependencies
        run: bun install

      - name: Run release for ${{ matrix.package }}
        run: bun run release:${{ matrix.package }}
        if: contains(github.event.head_commit.message, format('packages/{0}/', matrix.package)) || contains(toJSON(github.event.commits), format('packages/{0}/', matrix.package))

      - name: Check for changes and commit
        if: contains(github.event.head_commit.message, format('packages/{0}/', matrix.package)) || contains(toJSON(github.event.commits), format('packages/{0}/', matrix.package))
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if [ -n "$(git status --porcelain)" ]; then
            echo "Changes detected, committing..."
            git add .
            git commit -m "chore(${{ matrix.package }}): update version files after release [skip ci]"
            git push
          else
            echo "No changes to commit"
          fi